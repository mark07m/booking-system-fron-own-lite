#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m',
  white: '\x1b[37m',
  reset: '\x1b[0m',
  bold: '\x1b[1m',
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  console.log(`${colors.blue}${colors.bold}üîÑ ${description}${colors.reset}`);
  
  try {
    const output = execSync(command, { 
      stdio: 'pipe', 
      encoding: 'utf8',
      cwd: process.cwd()
    });
    
    console.log(`${colors.green}‚úÖ ${description} - –£—Å–ø–µ—à–Ω–æ${colors.reset}`);
    return { success: true, output };
  } catch (error) {
    console.log(`${colors.red}‚ùå ${description} - –û—à–∏–±–∫–∞${colors.reset}`);
    console.log(`${colors.red}${error.stdout || error.message}${colors.reset}`);
    return { success: false, error: error.stdout || error.message };
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤
function checkFiles() {
  console.log(`${colors.cyan}${colors.bold}üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...${colors.reset}`);
  
  const requiredFiles = [
    'package.json',
    'tsconfig.json',
    'eslint.config.mjs',
    '.prettierrc',
    '.eslintignore',
    '.prettierignore'
  ];
  
  const missingFiles = requiredFiles.filter(file => !fs.existsSync(file));
  
  if (missingFiles.length > 0) {
    console.log(`${colors.red}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: ${missingFiles.join(', ')}${colors.reset}`);
    return false;
  }
  
  console.log(`${colors.green}‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã${colors.reset}`);
  return true;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log(`${colors.magenta}${colors.bold}üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞${colors.reset}\n`);
  
  const startTime = Date.now();
  let allPassed = true;
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
  if (!checkFiles()) {
    allPassed = false;
  }
  
  console.log();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  const depsCheck = runCommand('pnpm install --frozen-lockfile', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');
  if (!depsCheck.success) {
    allPassed = false;
  }
  
  console.log();
  
  // –õ–∏–Ω—Ç–∏–Ω–≥
  const lintCheck = runCommand('pnpm run lint', '–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint');
  if (!lintCheck.success) {
    allPassed = false;
  }
  
  console.log();
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  const formatCheck = runCommand('pnpm run format:check', '–ü—Ä–æ–≤–µ—Ä–∫–∞ Prettier');
  if (!formatCheck.success) {
    allPassed = false;
  }
  
  console.log();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
  const typeCheck = runCommand('pnpm run typecheck', '–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript');
  if (!typeCheck.success) {
    allPassed = false;
  }
  
  console.log();
  
  // –°–±–æ—Ä–∫–∞
  const buildCheck = runCommand('pnpm run build', '–°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞');
  if (!buildCheck.success) {
    allPassed = false;
  }
  
  console.log();
  
  // –ò—Ç–æ–≥–∏
  const endTime = Date.now();
  const duration = ((endTime - startTime) / 1000).toFixed(2);
  
  if (allPassed) {
    console.log(`${colors.green}${colors.bold}üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${colors.reset}`);
    console.log(`${colors.green}‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}—Å${colors.reset}`);
    process.exit(0);
  } else {
    console.log(`${colors.red}${colors.bold}üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã${colors.reset}`);
    console.log(`${colors.red}‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}—Å${colors.reset}`);
    process.exit(1);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
if (args.includes('--help') || args.includes('-h')) {
  console.log(`
${colors.bold}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:${colors.reset}
  node scripts/check-quality.js [–æ–ø—Ü–∏–∏]

${colors.bold}–û–ø—Ü–∏–∏:${colors.reset}
  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --fix          –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

${colors.bold}–ü—Ä–∏–º–µ—Ä—ã:${colors.reset}
  node scripts/check-quality.js
  node scripts/check-quality.js --fix
`);
  process.exit(0);
}

if (args.includes('--fix')) {
  console.log(`${colors.yellow}üîß –†–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${colors.reset}\n`);
  
  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏–Ω—Ç–µ—Ä–∞
  runCommand('pnpm run lint:fix', '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ESLint –æ—à–∏–±–æ–∫');
  
  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  runCommand('pnpm run format', '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  
  console.log(`${colors.green}‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${colors.reset}`);
}

// –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main();
